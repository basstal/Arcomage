local ResourceType = CS.TOW.ResourceType
local U = require("Utils")

local Data = 
{
    {
        costs = 
        {
            {
                type = ResourceType.Brick,
                count = 0,
            }
        },
        id = 1001,
        name = "R1",
        func = function(player)
            U.ResChange(player, ResourceType.Brick, 2)
        end,
        note =  "砖块（B）+2"
    },
    {
        costs = 
        {
            {
                type = ResourceType.Brick,
                count = 2,
            }
        },
        id = 1002,
        name = "R2",
        func = function(player)
            U.ResChange(player, ResourceType.Monster, 2)
            U.ResChange(player, ResourceType.Jewelry, 1)
            U.ResChange(player, ResourceType.Brick, 5)
        end,
        note = "怪兽 + 2 珠宝 + 1 砖块 + 5"
    },
    {
        costs = 
        {
            {
                type = ResourceType.Brick,
                count = 4,
            },
        },
        id = 1003,
        name = "R3",
        func = function(player)
            U.ResChange(player, ResourceType.Monster, 5)
            U.ResChange(player, ResourceType.Brick, 12)
        end,
        note = "怪兽 + 5 砖块 + 12"
    },
    {
        id = 1004,
        costs = 
        {
            {
                type = ResourceType.Brick,
                count = 4,
            },
        },
        name = "R4",
        func = function(player)
            U.ResChange(player, ResourceType.Jewelry, 3)
            U.ResChange(player, ResourceType.Brick, 15)
        end,
        note = "珠宝 + 3 砖块 + 15"
    },
    {
        id = 1005,
        costs = 
        {
            {
                type = ResourceType.Brick,
                count = 9,
            },
        },
        name = "R5",
        func = function(player)
            U.ResChange(player, ResourceType.Jewelry, 5)
            U.ResChange(player, ResourceType.Monster, 10)
        end,
        note = "珠宝 + 5 怪兽 + 10"
    },
    {
        id = 1006,
        costs = 
        {
            {
                type = ResourceType.Brick,
                count = 3,
            },
        },
        name = "R6",
        func = function(player)
            local resources = U.HandlePlayerResources(player)
            U.AddCardEvent(player, 0, function()
                U.DynamicGrowthChange(player, ResourceType.Monster, 2)
            end)
            U.AddCardEvent(player, 1, function()
                U.DynamicGrowthChange(player, ResourceType.Monster, -2)
            end)
        end,
        note =  "怪兽（M）产量+2，持续1回合"
    },
    {
        id = 1007,
        costs = 
        {
            {
                type = ResourceType.Brick,
                count = 3,
            },
        },
        name = "R7",
        func = function(player)
            local resources = U.HandlePlayerResources(player)
            U.AddCardEvent(player, 0, function()
                U.DynamicGrowthChange(player, ResourceType.Brick, 2)
            end)
            U.AddCardEvent(player, 1, function()
                U.DynamicGrowthChange(player, ResourceType.Brick, -2)
            end)
        end,
        note = "砖块（B）产量+2，持续1回合"
    },
    -- {
    --     id = 1008,
    --     costs = 
    --     {
    --         {
    --             type = ResourceType.Brick,
    --             count = 5,
    --         },
    --     },
    --     name = "R8",
    --     func = function(player)
    --         U.AddCardEvent(player, 0, function()
    --             U.DynamicGrowthChange(player, ResourceType.Brick, 1)
    --         end)
    --         U.AddCardEvent(player, 3, function()
    --             U.DynamicGrowthChange(player, ResourceType.Brick, -1)
    --         end)
    --     end,
    --     note = "食物（F）资源增长率提高1.0/回合，持续3回合",
    -- },
    {
        id = 1009,
        costs = 
        {
            {
                type = ResourceType.Brick,
                count = 3,
            },
            {
                type =ResourceType.Brick,
                count = 2,
            }
        },
        name = "R9",
        func = function(player)
            U.ResChange(player, ResourceType.Monster, 3)
            U.AddCardEvent(player, 0, function()
                U.DynamicGrowthChange(player, ResourceType.Monster, 2)
            end)
            U.AddCardEvent(player, 3, function()
                U.DynamicGrowthChange(player, ResourceType.Monster, -2)
            end)
        end,
        note = "M+3，怪兽（M）产量+2，持续3回合",
    },
    {
        id = 1010,
        costs = 
        {
            {
                type = ResourceType.Brick,
                count = 4,
            },
        },
        name = "R10",
        func = function(player)
            U.ResChange(player, ResourceType.Jewelry, 2)
            
            U.AddCardEvent(player, 0, function()
                U.DynamicGrowthChange(player, ResourceType.Monster, 4)
            end)
            U.AddCardEvent(player, 2, function()
                U.DynamicGrowthChange(player, ResourceType.Monster, -4)

            end)
        end,
        note = "J+2，怪兽（M）产量+4，持续2回合",
    },
}

return Data