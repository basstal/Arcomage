local m_cardData
local U = require("Utils")

function Awake()
    BindButtonEvent(REF.UseCardButton, UseCard)
    local instanceId = this:GetInstanceID()
    DB.Bind(string.format("Card/Data/%s", instanceId), OnData)
end

function OnData(cardData)
    if cardData == nil then
        return
    end
    m_cardData = cardData
    local image = REF.CardImage
    image.sprite = cardData.sprite
    image:SetNativeSize()
    local gameMain = DB.GetData("Main")
    local gameMainCS = gameMain.GameMainCS
    local costData = cardData.cost
    if costData.type == CS.CostType.Brick then
        REF.UseCardButtonImage.sprite = gameMainCS.brick
    elseif costData.type == CS.CostType.Gem then
        REF.UseCardButtonImage.sprite = gameMainCS.gem
    else
        REF.UseCardButtonImage.sprite = gameMainCS.recruit
    end
    local GetString = CS.LocaleManager.GetString
    REF.CardNameTMP.text = GetString(string.format("CardName_%s", cardData.id))
    REF.CardDescribeTMP.text = GetString(string.format("CardDescribe_%s", cardData.id))
    REF.CardCostTMP.text = costData.count
    if __UNITY_EDITOR then
        local gameCardCS = this:GetComponent(typeof(CS.GameCard))
        gameCardCS.id = cardData.id
        gameCardCS.costType = costData.type
        gameCardCS.cost = costData.count
    end
    local extentImage = REF.CardExtent:GetComponent(typeof(CS.UnityEngine.UI.Image))
    local player = DB.GetData(string.format("Player%s", cardData.owner))
    local left = U.HandleCost(player, costData.type, costData.count)
    REF.UseCardButton:SetGraphicRaycastTarget(left >= 0)
    if left >= 0 then
        extentImage.color = CS.UnityEngine.Color.white
    else
        extentImage.color = CS.UnityEngine.Color.red
    end
end

function UseCard()
    if m_cardData == nil then
        error("卡面为空数据？？")
        return
    end
    local costData = m_cardData.cost
    local currentPlayer = DB.GetData("CurrentPlayer")
    local player = DB.GetData(string.format("Player%s", currentPlayer))
    U.ResChange(player, costData.type, - costData.count)
    local result = m_cardData.func(player)
    DB.TriggerEvent("Main/ShowUseCard", this)
    player.RemoveFromHandCards(m_cardData)
    DB.TriggerEvent(string.format("Player%s/Refresh", currentPlayer))
    if result ~= nil and result.enemyInfoRefresh then
        local enemy = currentPlayer == 1 and 2 or 1
        DB.TriggerEvent(string.format("Player%s/Refresh", enemy))
    end
    DB.TriggerEvent("Main/PlayerSwitch", result)
end
