--[[
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
---------------------------------------------global-------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
]]
GameMainCS = nil
GameData = {
    currentPlayer = 0
}

--[[
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
---------------------------------------------local--------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
]]
local CurrentStage = nil

local function SetCurrentPlayer(n)
    GameData.currentPlayer = n
    DB.SetData("CurrentPlayer", n)
end

--[[
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
---------------------------------------------function-----------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
]]
function Awake()
    GameMainCS = this:GetComponent(typeof(CS.GameMain))

    BindButtonEvent(REF.Start, GameStart)
    BindButtonEvent(REF.Reload, OnReload)
    DB.RegisterEvent("Main/PlayerSwitch", OnPlayerSwitch)
    DB.SetData("Main", _ENV)
end

function Update()
    UpdateDebugInputKeys()
    if CurrentStage ~= nil then
        CurrentStage()
    end
end

function UpdateDebugInputKeys()
    if CS.UnityEngine.Input.GetKeyDown(CS.UnityEngine.KeyCode.R) then
        OnReload()
    end
end

function TurnRound()
    GameMainCS.round = GameMainCS.round + 1
    if GameMainCS.round == 1 then
        DB.TriggerEvent("Player/GenHandCards", 5)
        SetCurrentPlayer(GameMainCS.firstPlayer)
    else
        DB.TriggerEvent("Player/RecycleHandCards")
        DB.TriggerEvent("Player/GenHandCards", 5)
        SetCurrentPlayer(GameData.currentPlayer % 2 + 1)
        local player = DB.GetData("Player{CurrentPlayer}")
        local U = require("Utils")
        info("玩家资源增长", vardump(player))
        U.PlayerResourceGrowthAll(player)
    end
    CurrentStage = PlayerRound
end

function GameMainCSCallback()
    CurrentStage = TurnRound
end

function GameStart()
    REF.Start:SetActive(false)
    GameMainCS.round = 0
    GameMainCS:Init(GameMainCSCallback)
    SetCurrentPlayer(0)
    GameData.playerSwitched = false
end

function OnPlayerSwitch(result, prevCardData)
    -- ** 再次出牌直接不改变当前玩家进入PlayerRound
    if result ~= nil and result.playAgain then
        local player = DB.GetData("Player{CurrentPlayer}")
        local removedIndex = player.RemoveFromHandCards(prevCardData)
        player.OnGenHandCards(1, removedIndex)
        CurrentStage = PlayerRound
        return
    end
    if GameData.playerSwitched then
        CurrentStage = TurnRound
    else
        local player = DB.GetData("Player{CurrentPlayer}")
        player.OnRecycleHandCards()

        SetCurrentPlayer(GameData.currentPlayer % 2 + 1)

        GameData.playerSwitched = true
        CurrentStage = PlayerRound
    end
end

function PlayerRound()
    local playerId = DB.GetData("CurrentPlayer")
    local handCards = DB.GetData(string.format("Player%s/HandCards", playerId))
    local parentTrans = REF.HandCardsLayout.transform
    local cardObjCacheRoot = GameMainCS.CardObjCacheRoot
    for _, cardData in pairs(handCards) do
        -- ** 此卡已在手牌中
        if cardData.transform == nil then
            local trans = cardObjCacheRoot:GetChild(0)
            cardData.transform = trans
            trans:SetParent(parentTrans, false)
            trans:GetComponent(typeof(CS.LuaBehaviour)).Sandbox.SetData(cardData)
            local ref = cardData.REF
            local id = playerId == 1 and "left2right" or "right2left"
            ref.DrawCard:DORestartById(id)
            ref.DrawCard:DORestartById("alpha")
        else
            local ref = cardData.REF
            local rectTransform = ref.DrawCard:GetComponent(typeof(CS.UnityEngine.RectTransform))
            rectTransform.localPosition = CS.UnityEngine.Vector3.zero
            ref.DrawCard:GetComponent(typeof(CS.UnityEngine.CanvasGroup)).alpha = 1
        end
    end

    CS.UnityEngine.UI.LayoutRebuilder.MarkLayoutForRebuild(parentTrans)
    CurrentStage = nil
    local player = DB.GetData("Player{CurrentPlayer}")
    if player.GamePlayerCS.useAI then
        player.REF.AI:StartBehaviourForLua()
    end
end

function OnReload()
    local loaderGO = CS.UnityEngine.GameObject.Find("/SingletonLoader")
    loaderGO.transform:GetComponent(typeof(CS.SingletonLoader)):ReloadScene()
end
